// /src/scss/helpers/_mixins.scss

// ############################# mixin's #############################

//@include css-variables-fallback();
//@mixin css-variables-fallback($property, $variable, $fallback) {
//  #{$property}: #{$fallback};
//  #{$property}: var(#{$variable}, #{$fallback});
//}

// @include min-width; // задаёт минимальную ширину сайта, если сайт не адаптивный см. /helpers/_mixins.scss
// @mixin min-width($adapt: #{$adaptive}) {
//   @if ($adapt == "false") {
//     // min-width: $site-width;
//     width: $site-width;
//     min-width: $site-width;
//   } @else if ($adapt == "true") {
//     width: 100%;
//     max-width: $site-width;
//   }
// }

// Миксин делает изображения круглыми, как у бутстрапа
// в этом миксине нужно задать блоку инлайново style="background-image: url(http://placehold.it/115x115);"
// инлайново, чтоб можно было менять через админку

// @include circle($diameter, $bgc); //diameter, background-color
//@mixin circle($diameter, $bgc) {
//  width: $diameter;
//  height: $diameter;
//
//  border-radius: 50%;
//  // background-color: $bgc;
//  // background-repeat: no-repeat;
//  // background-position: center center;
//  background: $bgc center no-repeat;
//  background-size: cover;
//}

// Миксин делает текст подеркнутым. Элемент должен быть инлайновым

// @include underlined-text($width, $style, $color); //($width, $style, $color)
//@mixin underlined-text($width, $style, $color) {
//  display: inline;
//
//  border-bottom: $width $style $color;
//}

// Миксин применялся на проекте куб. Решено было оставить

// @include lines($width, $padding, $color); //$width, $padding, $color
//@mixin lines($width, $padding, $color) {
//  padding: $padding 0;
//
//  border-top: $width solid $color;
//  border-bottom: $width solid $color;
//}

// @include font($font-size, $font-weight: 400, $line-height: 1.5, $font-style: normal, $font-family: $font); // Font берется из _vars.scss
@mixin font($font-size, $font-weight: 400, $line-height: 1.5, $font-style: normal, $font-family: $font) {
  font: $font-weight $font-style #{$font-size} / #{$line-height} $font-family;
  @if(type-of($font-size) == type-of($line-height)) {
    font: $font-weight $font-style #{$font-size} / #{$line-height/$font-size} $font-family;
  } @else {
    font: $font-weight $font-style #{$font-size} / #{$line-height} $font-family;
  }
}

//@include text-decoration;
@mixin text-decoration {
  &,
  &:link,
  &:visited,
  &:hover,
  &:active {
    text-decoration: none;
  }
}

//@include box-shadow;
 @mixin box-shadow {
  box-shadow: 0 6px 13px rgba(0, 0, 0, 0.17);

  &:hover {
    cursor: default;
    box-shadow: 0 6px 13px rgba(0, 0, 0, 0.4);
  }
}

//@include img;
@mixin img {
  width: auto;
  max-width: 100%;
  height: auto;
  max-height: 100%;
}

//@include transition;
@mixin transition($property: all, $time: 0.2s) {
  transition: $property $time ease-in;
}

// следует использовать в паре с миксином font
// @include link($color, $color-hover);
//@mixin link($color, $color-hover: $color, $color-active: $color) {
//  text-decoration: underline;
//
//  color: $color;
//  &:link {
//    text-decoration: underline;
//
//    color: $color;
//  }
//  &:visited {
//    text-decoration: underline;
//
//    color: darken($color, 15%);
//  }
//  &:hover {
//    cursor: pointer;
//    text-decoration: none;
//    // color: lighten($color, 10%);
//
//    color: $color-hover;
//  }
//  &:active {
//    cursor: pointer;
//    text-decoration: none;
//    // color: darken($color, 10%);
//
//    color: $color-active;
//  }
//}

// @include button($width, $height, $padding, $bgc, $font-size, $font-weight, $font-color, $border, $border-radius); //($width, $height, $padding, $bgc, $font-size, $font-weight: 400, $font-color: black, $border: none, $border-radius: 0)
//@mixin button($width, $height, $padding, $bgc, $font-size, $font-weight: 400, $font-color: black, $border: none, $border-radius: 0) {
//  // font-size: $font-size;
//  // font-weight: $font-weight;
//  // line-height: $height;
//  font: $font-weight #{$font-size} / #{$line-height} $font; // Font берется из _vars.scss
//
//  display: inline-block;
//
//  width: 100%;
//  max-width: $width;
//  height: $height;
//  padding: 0 $padding;
//
//  text-decoration: none;
//
//  color: $font-color;
//  border: $border;
//  border-radius: $border-radius;
//  outline: none;
//  background-color: $bgc;
//  &:link,
//  &:visited,
//  &:hover,
//  &:active {
//    text-decoration: none;
//
//    color: $font-color;
//    outline: none;
//  }
//  &:hover {
//    cursor: pointer;
//
//    color: $font-color;
//    background-color: lighten($bgc, 10%);
//  }
//  &:active {
//    color: $font-color;
//    background-color: darken($bgc, 10%);
//  }
//}

// генератор треугольника
// @include triangle($direction, $size, $color) // $direction: up, down, left, right

//@mixin triangle($direction, $size: 6px, $color: #222) {
//  position: absolute;
//
//  display: block;
//
//  width: 0;
//  height: 0;
//
//  content: "";
//  @if ($direction == "up") {
//    border-right: 1/2*$size solid transparent;
//    border-bottom: $size solid $color;
//    border-left: 1/2*$size solid transparent;
//  } @else if ($direction == "down") {
//    border-top: $size solid $color;
//    border-right: 1/2*$size solid transparent;
//    border-left: 1/2*$size solid transparent;
//  } @else if ($direction == "left") {
//    border-top: 1/2*$size solid transparent;
//    border-right: $size solid $color;
//    border-bottom: 1/2*$size solid transparent;
//  } @else if ($direction == "right") {
//    border-top: 1/2*$size solid transparent;
//    border-bottom: 1/2*$size solid transparent;
//    border-left: $size solid $color;
//  }
//}

// Пустые всплывающие подсказки, позволяющие размещать контент в HTML
// и при этом получать удивительно хорошую поддержку браузера.
//@mixin tooltip($content: attr(data-tooltip), $direction: top) {
//  position: relative;
//  &:before,
//  &:after {
//    z-index: 98;
//
//    display: none;
//  }
//  &:hover {
//    &:after {
//      font-size: 12px;
//
//      position: absolute;
//
//      display: block;
//
//      height: 12px; // (makes total height including padding 22px)
//      padding: 6px;
//      // for text bubble
//
//      content: $content;
//      white-space: nowrap;
//
//      color: #fff;
//      background-color: #222;
//
//      @include text-shadow(1px 1px #000);
//    }
//    @if ($direction == "top") {
//      &:before {
//        top: -6px;
//        left: 47%;
//
//        margin-top: 0;
//
//        @include triangle(down, 6px, #222);
//      }
//      &:after {
//        top: -28px;
//        left: 47%;
//
//        margin-left: -20px;
//      }
//    } @else if ($direction == "bottom") {
//      &:before {
//        top: auto;
//        bottom: -6px;
//        left: 47%;
//
//        margin-top: 0;
//
//        @include triangle(up, 6px, #222);
//      }
//      &:after {
//        bottom: -28px;
//        left: 47%;
//
//        margin-left: -20px;
//      }
//    }
//  }
//}

// возможные значения - phone, tablet, laptop, desktop, wide. см. _mixins.scss
// @include media() {}
// @mixin media($media: desktop) {
//   @if $media == phone {
//     @media (min-width: $sm) and (max-width: $md - 1) {
//       @content;
//     }
//   }
//   @else if $media == tablet {
//     @media (min-width: $md) and (max-width: $lg - 1) {
//       @content;
//     }
//   }
//   @else if $media == laptop {
//     @media (min-width: $lg) and (max-width: $xl - 1) {
//       @content;
//     }
//   }
//   @else if $media == desktop {
//     @media (min-width: $xl) and (max-width: $xxl - 1) {
//       @content;
//     }
//   }
//   @else if $media == wide {
//     @media (min-width: $xxl) {
//       @content;
//     }
//   }
// }

// миксин генерирует стрелку в псевдоэлементе after см. _mixins.scss
// @include arrow($size, $width, $color, $color-hover)

@mixin arrow($size: 10px, $width: 3px, $color: currentColor, $color-hover: $color) {
  & {
    position: relative;
  }
  &:after {
    @include transition;

    position: absolute;
    right: 0;
    top: 50%;

    display: block;

    width: $size;
    height: $size;

    content: "";
    transform: translate(-50%, -75%) rotate(135deg);  // вниз
    transform-origin: center;

    border: $width solid $color;
    // направо
    border-bottom: none;
    border-left: none;

  }
  &:hover:after {
    border: $width solid $color-hover;
    // направо
    border-bottom: none;
    border-left: none;
  }
}

// миксин поворачивает стрелку, сгенерированную предыдущим
// миксином arrow
// @include rotate-arrow(right) // $direction: up, down, left, right
@mixin rotate-arrow($direction: "right") {
  &:after {
    @if ($direction == "up") {
      transform: translate(-50%, -25%) rotate(-45deg); // вверх
    } @else if ($direction == "down") {
      transform: translate(-50%, -75%) rotate(135deg); // вниз
    } @else if ($direction == "left") {
      transform: translate(-25%, -50%) rotate(225deg); // налево
    } @else if ($direction == "right") {
      transform: translate(-75%, -50%) rotate(45deg); // направо
    }
  }
}
// линия через строку
// @include line-through;
@mixin line-through() {
  position: relative;

  &:before {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 0;
    content: "";
    border-bottom: 1px solid currentcolor;
  }
}